-- Free-fly with smooth movement + draggable GUI by @Ziggy
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

local flying = false
local speed = 50
local velocity = Vector3.new()

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 180, 0, 140)
frame.Position = UDim2.new(0.8, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(25,25,50)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Developer watermark
local watermark = Instance.new("TextLabel")
watermark.Size = UDim2.new(1,0,0,20)
watermark.Position = UDim2.new(0,0,0,0)
watermark.BackgroundTransparency = 1
watermark.Text = "Developer: @Ziggy"
watermark.TextColor3 = Color3.fromRGB(255,255,255)
watermark.Font = Enum.Font.SourceSansBold
watermark.TextScaled = true
watermark.Parent = frame

-- Arrow toggle
local arrow = Instance.new("TextButton")
arrow.Size = UDim2.new(0,30,0,30)
arrow.Position = UDim2.new(1,-30,0,0)
arrow.Text = "▶"
arrow.Font = Enum.Font.SourceSansBold
arrow.TextColor3 = Color3.fromRGB(255,255,255)
arrow.TextScaled = true
arrow.BackgroundColor3 = Color3.fromRGB(255,128,0)
arrow.Parent = frame

local isOpen = true
arrow.MouseButton1Click:Connect(function()
    isOpen = not isOpen
    if isOpen then
        frame.Size = UDim2.new(0,180,0,140)
        arrow.Text = "▶"
    else
        frame.Size = UDim2.new(0,30,0,30)
        arrow.Text = "◀"
    end
end)

-- Fly toggle
local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0,160,0,40)
flyButton.Position = UDim2.new(0.5,-80,0,40)
flyButton.Text = "Fly OFF"
flyButton.Font = Enum.Font.SourceSansBold
flyButton.TextColor3 = Color3.fromRGB(255,255,255)
flyButton.BackgroundColor3 = Color3.fromRGB(0,170,255)
flyButton.TextScaled = true
flyButton.Parent = frame

flyButton.MouseButton1Click:Connect(function()
    flying = not flying
    if flying then
        flyButton.Text = "Fly ON"
        humanoid.PlatformStand = true
    else
        flyButton.Text = "Fly OFF"
        humanoid.PlatformStand = false
    end
end)

-- Proper draggable GUI
do
    local dragging, dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                       startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Fly movement
RunService.RenderStepped:Connect(function()
    if flying then
        local cam = workspace.CurrentCamera
        local dir = Vector3.new()
        if UIS:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then dir += Vector3.new(0,1,0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then dir -= Vector3.new(0,1,0) end

        if dir.Magnitude > 0 then
            hrp.CFrame += dir.Unit * speed * RunService.RenderStepped:Wait()
        end
    end
end)-- Fly toggle
flyButton.MouseButton1Click:Connect(function()
    flying = not flying
    if flying then
        flyButton.Text = "Fly ON"
        humanoid.PlatformStand = true
        bodyPos.Parent = torso
        bodyGyro.Parent = torso
    else
        flyButton.Text = "Fly OFF"
        humanoid.PlatformStand = false
        bodyPos.Parent = nil
        bodyGyro.Parent = nil
    end
end)

-- Fly movement
RunService.RenderStepped:Connect(function(delta)
    if flying and torso then
        local moveVec = Vector3.new()
        local cam = workspace.CurrentCamera
        if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec += cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec -= cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec -= cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec += cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then moveVec += Vector3.new(0,1,0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then moveVec -= Vector3.new(0,1,0) end

        if moveVec.Magnitude > 0 then
            bodyPos.Position = torso.Position + moveVec.Unit * speed
            bodyGyro.CFrame = CFrame.new(torso.Position, torso.Position + moveVec)
        else
            bodyPos.Position = torso.Position
        end
    end
end)
