-- Collapsible Fly+ESP+Sticky+Invisibility+RemoveRope Menu
-- by Afshan

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

-- GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 200, 0, 260)
Frame.Position = UDim2.new(0, 20, 0.5, -130)
Frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
Frame.Active = true
Frame.Draggable = true
Frame.Visible = true
Frame.Name = "ModMenu"

local UIListLayout = Instance.new("UIListLayout", Frame)
UIListLayout.Padding = UDim.new(0, 5)

local function createToggle(name, callback)
    local btn = Instance.new("TextButton", Frame)
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = name .. ": OFF"
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = name .. ": " .. (state and "ON" or "OFF")
        callback(state)
    end)
    return btn
end

----------------------------------------------------------------------
-- Fly
----------------------------------------------------------------------
local flying = false
local flySpeed = 50
local vel, gyro

local function setFly(on)
    if on then
        flying = true
        vel = Instance.new("BodyVelocity", hrp)
        vel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        gyro = Instance.new("BodyGyro", hrp)
        gyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
        RunService.RenderStepped:Connect(function()
            if flying then
                vel.Velocity = Vector3.zero
                local camCF = Workspace.CurrentCamera.CFrame
                if UIS:IsKeyDown(Enum.KeyCode.W) then vel.Velocity = vel.Velocity + camCF.LookVector * flySpeed end
                if UIS:IsKeyDown(Enum.KeyCode.S) then vel.Velocity = vel.Velocity - camCF.LookVector * flySpeed end
                if UIS:IsKeyDown(Enum.KeyCode.A) then vel.Velocity = vel.Velocity - camCF.RightVector * flySpeed end
                if UIS:IsKeyDown(Enum.KeyCode.D) then vel.Velocity = vel.Velocity + camCF.RightVector * flySpeed end
                if UIS:IsKeyDown(Enum.KeyCode.Space) then vel.Velocity = vel.Velocity + Vector3.new(0, flySpeed, 0) end
                if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then vel.Velocity = vel.Velocity - Vector3.new(0, flySpeed, 0) end
                gyro.CFrame = camCF
            end
        end)
    else
        flying = false
        if vel then vel:Destroy() end
        if gyro then gyro:Destroy() end
    end
end

----------------------------------------------------------------------
-- ESP
----------------------------------------------------------------------
local espEnabled = false
local espConnections = {}

local function setESP(on)
    espEnabled = on
    for _,v in pairs(espConnections) do v:Disconnect() end
    espConnections = {}

    if on then
        local function addESP(p)
            if p == player then return end
            local box = Instance.new("Highlight", p.Character or p.CharacterAdded:Wait())
            box.FillTransparency = 1
            box.OutlineColor = Color3.fromRGB(255,0,0)
            local conn
            conn = p.CharacterAdded:Connect(function(char)
                box.Parent = char
            end)
            table.insert(espConnections, conn)
        end
        for _,p in pairs(Players:GetPlayers()) do addESP(p) end
        table.insert(espConnections, Players.PlayerAdded:Connect(addESP))
    else
        for _,p in pairs(Players:GetPlayers()) do
            if p.Character then
                local h = p.Character:FindFirstChildOfClass("Highlight")
                if h then h:Destroy() end
            end
        end
    end
end

----------------------------------------------------------------------
-- Sticky
----------------------------------------------------------------------
local sticky = false
local targetIndex = 1
local offset = CFrame.new(0,0,3)

local function setSticky(on)
    sticky = on
    if on then
        RunService.RenderStepped:Connect(function()
            if sticky then
                local plist = Players:GetPlayers()
                if #plist > 1 then
                    local t = plist[targetIndex]
                    if t and t.Character and t.Character:FindFirstChild("HumanoidRootPart") then
                        hrp.CFrame = t.Character.HumanoidRootPart.CFrame * offset
                    end
                end
            end
        end)
    end
end

----------------------------------------------------------------------
-- Invisibility (fixed restore system)
----------------------------------------------------------------------
local invisible = false
local savedProps = {}

local function setInvisible(on)
    local char = player.Character
    if not char then return end

    if on then
        savedProps = {}
        for _,desc in pairs(char:GetDescendants()) do
            if desc:IsA("BasePart") then
                savedProps[desc] = {Transparency = desc.Transparency, Color = desc.Color, Material = desc.Material}
                desc.Transparency = 1
                desc.CanCollide = false
            elseif desc:IsA("Decal") then
                savedProps[desc] = {Transparency = desc.Transparency}
                desc.Transparency = 1
            elseif desc:IsA("Clothing") or desc:IsA("ShirtGraphic") then
                savedProps[desc] = {Parent = desc.Parent}
                desc.Parent = nil
            elseif desc:IsA("Accessory") and desc:FindFirstChild("Handle") then
                local handle = desc.Handle
                savedProps[handle] = {Transparency = handle.Transparency, Color = handle.Color, Material = handle.Material}
                handle.Transparency = 1
            end
        end
    else
        for inst,props in pairs(savedProps) do
            if inst.Parent or props.Parent then
                for prop,val in pairs(props) do
                    if prop == "Parent" then
                        inst.Parent = val
                    else
                        pcall(function() inst[prop] = val end)
                    end
                end
            end
        end
        savedProps = {}
    end
end

----------------------------------------------------------------------
-- Remove Rope
----------------------------------------------------------------------
local function removeRope()
    local map = Workspace:FindFirstChild("Map")
    if not map then return end
    local jr = map:FindFirstChild("JumpRope")
    if not jr then return end
    for _,dollName in pairs({"DOLL123123","Doll1","Doll2"}) do
        local doll = jr:FindFirstChild(dollName)
        if doll and doll:FindFirstChild("ropeholder") then
            doll.ropeholder:ClearAllChildren()
        end
    end
end

----------------------------------------------------------------------
-- Menu buttons
----------------------------------------------------------------------
createToggle("Fly", setFly)
createToggle("ESP", setESP)
createToggle("Sticky", setSticky)
createToggle("Invisible", setInvisible)

local ropeBtn = Instance.new("TextButton", Frame)
ropeBtn.Size = UDim2.new(1, -10, 0, 30)
ropeBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
ropeBtn.TextColor3 = Color3.new(1,1,1)
ropeBtn.Text = "Remove Rope"
ropeBtn.MouseButton1Click:Connect(removeRope)
