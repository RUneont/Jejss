--// Collapsible Fly + ESP + Sticky + Invisibility + Remove Rope Menu

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

-- Menu GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 200, 0, 300)
Frame.Position = UDim2.new(0, 50, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.Active = true
Frame.Draggable = true

local layout = Instance.new("UIListLayout", Frame)
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- Toggle Helper
local function createToggle(name, callback)
    local btn = Instance.new("TextButton", Frame)
    btn.Size = UDim2.new(1,0,0,30)
    btn.Text = name.." [OFF]"
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = name.." ["..(state and "ON" or "OFF").."]"
        callback(state)
    end)
end

------------------------------------------------------
-- Fly
local flying, vel = false, nil
createToggle("Fly", function(state)
    flying = state
    if state then
        vel = Instance.new("BodyVelocity")
        vel.MaxForce = Vector3.new(1e5,1e5,1e5)
        vel.Parent = hrp
        RunService.RenderStepped:Connect(function()
            if flying and vel then
                local dir = Vector3.zero
                if UIS:IsKeyDown(Enum.KeyCode.W) then dir = dir + Workspace.CurrentCamera.CFrame.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.S) then dir = dir - Workspace.CurrentCamera.CFrame.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.A) then dir = dir - Workspace.CurrentCamera.CFrame.RightVector end
                if UIS:IsKeyDown(Enum.KeyCode.D) then dir = dir + Workspace.CurrentCamera.CFrame.RightVector end
                vel.Velocity = dir * 50
            end
        end)
    else
        if vel then vel:Destroy() vel = nil end
    end
end)

------------------------------------------------------
-- ESP
local espEnabled = false
local espObjects = {}

local function enableESP()
    for _,plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("Head") then
            local highlight = Instance.new("Highlight", plr.Character)
            highlight.FillColor = Color3.fromRGB(255,0,0)
            espObjects[plr] = highlight
        end
    end
    Players.PlayerAdded:Connect(function(plr)
        plr.CharacterAdded:Connect(function(char)
            local highlight = Instance.new("Highlight", char)
            highlight.FillColor = Color3.fromRGB(255,0,0)
            espObjects[plr] = highlight
        end)
    end)
end

local function disableESP()
    for plr,obj in pairs(espObjects) do
        if obj then obj:Destroy() end
    end
    espObjects = {}
end

createToggle("ESP", function(state)
    espEnabled = state
    if state then enableESP() else disableESP() end
end)

------------------------------------------------------
-- Sticky
local sticky = false
local target = nil
createToggle("Sticky", function(state)
    sticky = state
    if not state then target = nil end
end)

RunService.RenderStepped:Connect(function()
    if sticky then
        if not target then
            for _,plr in pairs(Players:GetPlayers()) do
                if plr ~= player then target = plr break end
            end
        elseif target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            hrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
        end
    end
end)

------------------------------------------------------
-- Invisibility (with full restore)
local invis = false
local originalProps = {}

createToggle("Invisibility", function(state)
    invis = state
    if state then
        originalProps = {}
        for _,desc in pairs(char:GetDescendants()) do
            if desc:IsA("BasePart") or desc:IsA("Decal") or (desc:IsA("Accessory") and desc:FindFirstChild("Handle")) then
                originalProps[desc] = desc.Transparency
                desc.Transparency = 1
                if desc:IsA("Decal") then
                    desc.Transparency = 1
                elseif desc:IsA("Accessory") and desc:FindFirstChild("Handle") then
                    desc.Handle.Transparency = 1
                end
            end
        end
    else
        for obj,trans in pairs(originalProps) do
            if obj and obj.Parent then
                if obj:IsA("Accessory") and obj:FindFirstChild("Handle") then
                    obj.Handle.Transparency = trans
                else
                    obj.Transparency = trans
                end
            end
        end
        originalProps = {}
    end
end)

------------------------------------------------------
-- Remove Rope
local function removeRope()
    local map = Workspace:FindFirstChild("Map")
    if not map then return end
    local jumpRope = map:FindFirstChild("JumpRope")
    if not jumpRope then return end

    for _,dollName in pairs({"Doll1","Doll2"}) do
        local dollFolder = jumpRope:FindFirstChild("DOLL123123")
        if dollFolder then
            local doll = dollFolder:FindFirstChild(dollName)
            if doll and doll:FindFirstChild("ropeholder") then
                doll.ropeholder:ClearAllChildren()
            end
        end
    end
end

local ropeBtn = Instance.new("TextButton", Frame)
ropeBtn.Size = UDim2.new(1,0,0,30)
ropeBtn.Text = "Remove Rope"
ropeBtn.BackgroundColor3 = Color3.fromRGB(100,0,0)
ropeBtn.TextColor3 = Color3.new(1,1,1)
ropeBtn.MouseButton1Click:Connect(removeRope)
