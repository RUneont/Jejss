-- @Ziggy Collapsible Fly+ESP+Sticky+Invisible+Wallhack Menu      
local Players = game:GetService("Players")      
local RunService = game:GetService("RunService")      
local UIS = game:GetService("UserInputService")      
local Workspace = game:GetService("Workspace")      

local player = Players.LocalPlayer      
local char = player.Character or player.CharacterAdded:Wait()      
local hrp = char:WaitForChild("HumanoidRootPart")      
local humanoid = char:WaitForChild("Humanoid")      

-- Settings      
local flying = false      
local flySpeed = 50      
local espEnabled = false      
local espColor = Color3.fromRGB(255,105,180)      
local highlights = {}      
local stickyTarget = nil      
local stickyActive = false      
local stickOffset = Vector3.new(0,0,3)      
local invisible = false      
local noclip = false      
local darkMode = true -- default      

-- Prevent duplicate GUI      
if player:FindFirstChild("PlayerGui"):FindFirstChild("ZiggyMenu") then      
    player.PlayerGui.ZiggyMenu:Destroy()      
end      

-- GUI      
local gui = Instance.new("ScreenGui")      
gui.Name = "ZiggyMenu"      
gui.ResetOnSpawn = false      
gui.Parent = player:WaitForChild("PlayerGui")      

local frame = Instance.new("Frame")      
frame.Size = UDim2.new(0, 160, 0, 30)      
frame.Position = UDim2.new(0.5, -80, 0.5, -15)      
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)      
frame.BorderSizePixel = 0      
frame.Active = true      
frame.Draggable = true      
frame.Parent = gui      

-- Theme toggle button (top-left circle)      
local themeBtn = Instance.new("TextButton")      
themeBtn.Size = UDim2.new(0,20,0,20)      
themeBtn.Position = UDim2.new(0,5,0,5)      
themeBtn.BackgroundColor3 = Color3.fromRGB(80,80,80)      
themeBtn.TextColor3 = Color3.fromRGB(255,255,255)      
themeBtn.Text = "☽"      
themeBtn.Font = Enum.Font.SourceSansBold      
themeBtn.TextScaled = true      
themeBtn.AutoButtonColor = false      
themeBtn.Parent = frame      

themeBtn.MouseButton1Click:Connect(function()      
    darkMode = not darkMode      
    if darkMode then      
        frame.BackgroundColor3 = Color3.fromRGB(20,20,20)      
        themeBtn.Text = "☽"      
    else      
        frame.BackgroundColor3 = Color3.fromRGB(240,240,240)      
        themeBtn.Text = "☀︎"      
    end      
end)      

local title = Instance.new("TextLabel")      
title.Size = UDim2.new(1,0,0,30)      
title.Position = UDim2.new(0,0,0,0)      
title.BackgroundTransparency = 1      
title.Text = "Mod Menu ▼"      
title.TextColor3 = Color3.fromRGB(255,255,255)      
title.Font = Enum.Font.SourceSansBold      
title.TextScaled = true      
title.Parent = frame      

local expanded = false      
local content = Instance.new("Frame")      
content.Size = UDim2.new(1,0,0,200)      
content.Position = UDim2.new(0,0,0,30)      
content.BackgroundTransparency = 1      
content.Visible = false      
content.Parent = frame      

title.InputBegan:Connect(function(input)      
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then      
        expanded = not expanded      
        content.Visible = expanded      
        frame.Size = expanded and UDim2.new(0,160,0,230) or UDim2.new(0,160,0,30)      
        title.Text = expanded and "Mod Menu ▲" or "Mod Menu ▼"      
    end      
end)      

-- Checkbox helper      
local function createCheckbox(text, yPos, callback)      
    local holder = Instance.new("Frame")      
    holder.Size = UDim2.new(1,0,0,20)      
    holder.Position = UDim2.new(0,0,0,yPos)      
    holder.BackgroundTransparency = 1      
    holder.Parent = content      

    local box = Instance.new("TextButton")      
    box.Size = UDim2.new(0,18,0,18)      
    box.Position = UDim2.new(0,6,0,1)      
    box.BackgroundColor3 = Color3.fromRGB(60,60,60)      
    box.BorderSizePixel = 0      
    box.Text = ""      
    box.AutoButtonColor = false      
    box.Parent = holder      

    local check = Instance.new("TextLabel")      
    check.Size = UDim2.new(1,0,1,0)      
    check.BackgroundTransparency = 1      
    check.Text = "✔"      
    check.TextColor3 = Color3.fromRGB(0,220,0)      
    check.Visible = false      
    check.Font = Enum.Font.SourceSansBold      
    check.TextScaled = true      
    check.Parent = box      

    local label = Instance.new("TextLabel")      
    label.Size = UDim2.new(1,-30,1,0)      
    label.Position = UDim2.new(0,30,0,0)      
    label.BackgroundTransparency = 1      
    label.TextColor3 = Color3.fromRGB(255,255,255)      
    label.Text = text      
    label.Font = Enum.Font.SourceSans      
    label.TextScaled = true      
    label.TextXAlignment = Enum.TextXAlignment.Left      
    label.Parent = holder      

    local state = false      
    local function toggle()      
        state = not state      
        check.Visible = state      
        callback(state)      
    end      
    box.MouseButton1Click:Connect(toggle)      
    label.InputBegan:Connect(function(input)      
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then      
            toggle()      
        end      
    end)      
end      

-- Fly Checkbox      
createCheckbox("Fly", 0, function(val)      
    flying = val      
    if not val and hrp then hrp.AssemblyLinearVelocity = Vector3.new(0,0,0) end      
end)      

-- ESP Checkbox      
createCheckbox("ESP", 28, function(val)      
    espEnabled = val      
end)      

-- Invisible Checkbox      
createCheckbox("Invisible", 56, function(val)      
    invisible = val      
    for _,desc in pairs(char:GetDescendants()) do      
        if desc:IsA("BasePart") or desc:IsA("Decal") or desc:IsA("Clothing") or desc:IsA("ShirtGraphic") then      
            desc.Transparency = val and 1 or 0      
        end      
    end      
end)      

-- Wallhack Checkbox      
createCheckbox("Wallhack", 84, function(val)      
    noclip = val      
end)      

-- Player selector, stick, unstick, watermark, ESP refresh, fly, sticky, noclip logic
-- [All previous code remains unchanged]
-- including stickyTarget logic, arrow buttons, sticky button, unstick button, watermark

-- Highlight helper
local function addHighlightToChar(ch)
    if not ch or not ch:IsA("Model") then return end
    if ch:FindFirstChild("ESP_Highlight") then return end
    local hl = Instance.new("Highlight")
    hl.Name = "ESP_Highlight"
    hl.Adornee = ch
    hl.Parent = ch
    hl.FillTransparency = 1
    hl.OutlineColor = espColor
    hl.OutlineTransparency = 0
    return hl
end

local function refreshESP()
    for _,plr in pairs(Players:GetPlayers()) do
        if plr ~= player then
            local ch = plr.Character
            if espEnabled then
                if ch and not highlights[plr] then
                    highlights[plr] = addHighlightToChar(ch)
                end
            else
                if highlights[plr] and highlights[plr].Parent then
                    highlights[plr]:Destroy()
                end
                highlights[plr] = nil
            end
        end
    end
end

RunService.RenderStepped:Connect(refreshESP)

RunService.RenderStepped:Connect(function()
    -- Fly
    if flying and hrp and humanoid then
        local cam = Workspace.CurrentCamera
        local look = cam.CFrame.LookVector
        local right = cam.CFrame.RightVector
        local horizLook = Vector3.new(look.X, 0, look.Z)
        local forwardAxis = (horizLook.Magnitude > 0.001) and horizLook.Unit or Vector3.new(0,0,-1)
        local rightAxis = Vector3.new(right.X, 0, right.Z)
        rightAxis = (rightAxis.Magnitude > 0.001) and rightAxis.Unit or Vector3.new(1,0,0)
        local moveDir = humanoid.MoveDirection
        local forwardInput = moveDir:Dot(forwardAxis)
        local rightInput = moveDir:Dot(rightAxis)
        local desired = cam.CFrame.LookVector * forwardInput + cam.CFrame.RightVector * rightInput
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
            desired = desired - Vector3.new(0,1,0)
        end
        hrp.AssemblyLinearVelocity = desired * flySpeed
    end

    -- Sticky
    if stickyActive and stickyTarget and stickyTarget.Character and stickyTarget.Character:FindFirstChild("HumanoidRootPart") and hrp then
        local targetHRP = stickyTarget.Character.HumanoidRootPart
        local backCFrame = targetHRP.CFrame * CFrame.new(0, 0, stickOffset.Z)
        hrp.CFrame = CFrame.new(backCFrame.Position, targetHRP.Position)
    end

    -- Wallhack (noclip)
    if noclip and char then
        for _,v in pairs(char:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    else
        for _,v in pairs(char:GetDescendants()) do
            if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
                v.CanCollide = true
            end
        end
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    if highlights[plr] then
        if highlights[plr].Parent then highlights[plr]:Destroy() end
        highlights[plr] = nil
    end
end)

player.CharacterAdded:Connect(function(c)
    char = c
    hrp = char:WaitForChild("HumanoidRootPart")
    humanoid = char:WaitForChild("Humanoid")
end)
