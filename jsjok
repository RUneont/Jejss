-- @Ziggy Collapsible Fly+ESP Menu (Mobile + PC)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

local flying = false
local flySpeed = 50

local espEnabled = false
local espColor = Color3.fromRGB(0,255,0)
local highlights = {}

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "ZiggyMenu"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 150, 0, 30) -- collapsed by default
frame.Position = UDim2.new(0.5, -75, 0.5, -15)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Title / Watermark
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0,30)
title.Position = UDim2.new(0,0,0,0)
title.BackgroundTransparency = 1
title.Text = "Mod Menu ▼"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.SourceSansBold
title.TextScaled = true
title.Parent = frame

local expanded = false

-- Collapsible content
local content = Instance.new("Frame")
content.Size = UDim2.new(1,0,0,50)
content.Position = UDim2.new(0,0,0,30)
content.BackgroundTransparency = 1
content.Visible = false
content.Parent = frame

-- Draggable (PC + Mobile)
do
    local dragging, dragStart, startPos

    local function update(input)
        if dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                       startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UIS.InputChanged:Connect(update)
end

-- Collapse/Expand
title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        expanded = not expanded
        content.Visible = expanded
        frame.Size = expanded and UDim2.new(0,150,0,80) or UDim2.new(0,150,0,30)
        title.Text = expanded and "Mod Menu ▲" or "Mod Menu ▼"
    end
end)

-- Helper tick labels
local function createTickLabel(text, yPos, callback)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,0,20)
    label.Position = UDim2.new(0,0,0,yPos)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.Font = Enum.Font.SourceSans
    label.TextScaled = true
    label.Text = "[ ] "..text
    label.Parent = content

    label.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local ticked = label.Text:sub(1,3) == "[x]"
            label.Text = (ticked and "[ ] " or "[x] ")..text
            callback(not ticked)
        end
    end)
end

-- Fly tick
createTickLabel("Fly", 0, function(val)
    flying = val
    humanoid.PlatformStand = val
    if not val then hrp.Velocity = Vector3.new(0,0,0) end
end)

-- ESP tick
createTickLabel("ESP", 25, function(val)
    espEnabled = val
    if not val then
        for _, hl in pairs(highlights) do
            hl:Destroy()
        end
        highlights = {}
    end
end)

-- ESP updater
RunService.RenderStepped:Connect(function()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            if espEnabled then
                if not highlights[plr] then
                    local hl = Instance.new("Highlight")
                    hl.Adornee = plr.Character
                    hl.FillTransparency = 1
                    hl.OutlineColor = espColor
                    hl.OutlineTransparency = 0
                    hl.Parent = gui
                    highlights[plr] = hl
                end
            else
                if highlights[plr] then
                    highlights[plr]:Destroy()
                    highlights[plr] = nil
                end
            end
        end
    end
end)

-- Fly movement (mobile + PC)
RunService.RenderStepped:Connect(function()
    if flying then
        local moveDir = humanoid.MoveDirection
        local velocity = moveDir * flySpeed
        if UIS:IsKeyDown(Enum.KeyCode.Space) then
            velocity = velocity + Vector3.new(0, flySpeed, 0)
        elseif UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
            velocity = velocity - Vector3.new(0, flySpeed, 0)
        end
        hrp.Velocity = velocity
    end
end)
