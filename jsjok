-- Free-fly + ESP + draggable GUI by @Ziggy
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

local flying = false
local speed = 50
local espEnabled = false
local highlights = {}

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 180, 0, 100)
frame.Position = UDim2.new(0.5, -90, 0.5, -50) -- centered
frame.BackgroundColor3 = Color3.fromRGB(25,25,50)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Developer watermark
local watermark = Instance.new("TextLabel")
watermark.Size = UDim2.new(1,0,0,20)
watermark.Position = UDim2.new(0,0,0,0)
watermark.BackgroundTransparency = 1
watermark.Text = "Developer: @Ziggy"
watermark.TextColor3 = Color3.fromRGB(255,255,255)
watermark.Font = Enum.Font.SourceSansBold
watermark.TextScaled = true
watermark.Parent = frame

-- Fly toggle button (small)
local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0,80,0,30)
flyButton.Position = UDim2.new(0,10,0,30)
flyButton.Text = "Fly OFF"
flyButton.Font = Enum.Font.SourceSansBold
flyButton.TextColor3 = Color3.fromRGB(255,255,255)
flyButton.BackgroundColor3 = Color3.fromRGB(0,170,255)
flyButton.TextScaled = true
flyButton.Parent = frame

flyButton.MouseButton1Click:Connect(function()
    flying = not flying
    if flying then
        flyButton.Text = "Fly ON"
        humanoid.PlatformStand = true
    else
        flyButton.Text = "Fly OFF"
        humanoid.PlatformStand = false
    end
end)

-- ESP toggle button (small)
local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(0,80,0,30)
espButton.Position = UDim2.new(0,90,0,30)
espButton.Text = "ESP OFF"
espButton.Font = Enum.Font.SourceSansBold
espButton.TextColor3 = Color3.fromRGB(255,255,255)
espButton.BackgroundColor3 = Color3.fromRGB(0,255,0)
espButton.TextScaled = true
espButton.Parent = frame

espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP ON" or "ESP OFF"
    if espEnabled then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local hrp2 = plr.Character:FindFirstChild("HumanoidRootPart")
                if hrp2 and not highlights[plr] then
                    local hl = Instance.new("Highlight")
                    hl.Adornee = plr.Character
                    hl.FillColor = Color3.fromRGB(0,255,0)
                    hl.OutlineTransparency = 1
                    hl.Parent = gui
                    highlights[plr] = hl
                end
            end
        end
    else
        for _, hl in pairs(highlights) do
            hl:Destroy()
        end
        highlights = {}
    end
end)

-- Update ESP for new players joining
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        if espEnabled then
            task.wait(0.5) -- wait for HumanoidRootPart to exist
            local hrp2 = char:FindFirstChild("HumanoidRootPart")
            if hrp2 and not highlights[plr] then
                local hl = Instance.new("Highlight")
                hl.Adornee = char
                hl.FillColor = Color3.fromRGB(0,255,0)
                hl.OutlineTransparency = 1
                hl.Parent = gui
                highlights[plr] = hl
            end
        end
    end)
end)

-- Draggable GUI (classic)
do
    local dragging, dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                       startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Fly movement
RunService.RenderStepped:Connect(function(delta)
    if flying then
        local cam = workspace.CurrentCamera
        local dir = Vector3.new()
        if UIS:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then dir += Vector3.new(0,1,0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then dir -= Vector3.new(0,1,0) end

        if dir.Magnitude > 0 then
            hrp.CFrame += dir.Unit * speed * delta
        end
    end
end)
